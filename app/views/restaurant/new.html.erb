<div class="container">
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="map" style="width:100%; height:400px;"></div>
                </div>
                <div class="panel-footer">
                    <div>
                        <strong id="txt_address">지도에서 위치를 선택해주세요.</strong>
                        <small id="txt_latlng"></small>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <form action="/restaurant/create" method="post" enctype="multipart/form-data">
                <%= hidden_field_tag(request_forgery_protection_token.to_s, form_authenticity_token) %>
                <input type="hidden" id="lat" name="lat" value="0">
                <input type="hidden" id="lng" name="lng" value="0">
                <input type="hidden" id="address" name="address" value="">
                <div class="form-group">
                    <label for="name">이름</label>
                    <input class="form-control" type="text" name="name">
                </div>
                <div class="form-group">
                    <label for="description">설명</label>
                    <input class="form-control" type="text" name="description">
                </div>
                <hr>
                <div class="form-group">
                    <label for="images[]">사진</label>
                    <input name="images[]" id="images" type="file"  multiple="multiple" accept="image/jpg, image/jpeg, image/png">
                </div>
                <button type="submit" class="btn btn-default pull-right">맛집 등록하기</button>
            </form>
        </div>
    </div>
</div>

<script>
    var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
    var options = { //지도를 생성할 때 필요한 기본 옵션
    	center: new daum.maps.LatLng(37.529838, 126.964519), //지도의 중심좌표.
    	level: 6 //지도의 레벨(확대, 축소 정도)
    };
    
    var map = new daum.maps.Map(container, options); //지도 생성 및 객체 리턴
    
    
    var marker = null;
    var geocoder = new daum.maps.services.Geocoder();
        
    
    daum.maps.event.addListener(map, 'click', function(mouseEvent){
        
        if (marker == null) {
           marker = new daum.maps.Marker({
               position: map.getCenter()
           });
           marker.setMap(map);
        } 
        
        var latlng = mouseEvent.latLng;
        marker.setPosition(latlng);
        
        $('#lat').val(latlng.getLat());
        $('#lng').val(latlng.getLng());
        
        geocoder.coord2Address(latlng.getLng(), latlng.getLat(), function(result, status) {
            console.log(result);
            
            var address_name = '';
            
            if (result.length > 0) {
                address_name = result[0].address.address_name;
            }
            
            $('#txt_address').text(address_name);
            $('#txt_latlng').text('('+latlng.getLat()+','+latlng.getLng()+')');
            
            $('#address').val(address_name);
        });
        
        
    });
    
</script>